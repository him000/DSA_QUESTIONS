
bool decision(const pair<int,int> &a, const pair<int,int> &b)
{ return a.second < b.second; } 
class Solution
{
    public:
    
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    int maxMeetings(int start[], int end[], int n)
    {
        // Your code here
        vector< pair<int,int> > temp;
        int count = 1;
        
        for(int i=0;i<n;i++)
        {
            temp.push_back(make_pair(start[i],end[i]));
        }

        //sort meeting time based on end time
        sort( temp.begin(), temp.end() , decision);

        int i = 1,j=0;
        
        while(i<n)
        {  
            // two meetings cannnot be overlapped so we will not use >=
            if(temp[i].first > temp[j].second)
            {
                count++;
                j = i;   
            }
            i++;
        }
        
        return count;
        
    }
};
